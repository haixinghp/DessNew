/********************************************************************************************************************
 * @file:        HAL_Touch.h
 * @author:      gushengchi
 * @version:     V01.00
 * @date:        2021-07-29
 * @Description: 触摸按键接口功能函数文件
 * @ChangeList:  01. 初版
*********************************************************************************************************************/
  
/*-------------------------------------------------文件包含---------------------------------------------------------*/
#include "HAL_Touch.h" 
#include "Public.h"
 
/*-------------------------------------------------宏定义-----------------------------------------------------------*/


/*-------------------------------------------------枚举定义---------------------------------------------------------*/


/*-------------------------------------------------常量定义---------------------------------------------------------*/


/*-------------------------------------------------全局变量定义-----------------------------------------------------*/         


/*-------------------------------------------------局部变量定义-----------------------------------------------------*/
 

/*-------------------------------------------------函数声明---------------------------------------------------------*/
 

/*-------------------------------------------------函数定义---------------------------------------------------------*/

/*********************************************************************************************************************
* Function Name :  HAL_Touch_FileInit()
* Description   :  功能文件初始化
* Para          :  无
* Return        :  void
*********************************************************************************************************************/
void HAL_Touch_FileInit( void ) 
{
   DRV_GT316L_FileInit(); 
}

/*********************************************************************************************************************
* Function Name :  HAL_Touch_SleepInit()
* Description   :  休眠初始化
* Para          :  无
* Return        :  void
*********************************************************************************************************************/
void HAL_Touch_SleepInit( void ) 
{
   DRV_GT316L_SleepInit(); 
}
 
/*********************************************************************************************************************
* Function Name :  HAL_Touch_PwmOutputCtrl()
* Description   :  PWM引脚输出控制
* Para          :  channel - pwm输出通道   pwmVal - PWM占空比
* Return        :  none
*********************************************************************************************************************/
void HAL_Touch_PwmOutputCtrl( uint8_t channel, uint8_t pwmVal )
{
   (void)DRV_GT316L_PwmOutputCtrl( (PWM_CHANNEL_E)channel, pwmVal );
}

/*********************************************************************************************************************
* Function Name :  HAL_Touch_GetIICBusState()
* Description   :  确认IIC总线的状态
* Para          :  none
* Return        :  0= 故障  1= 正常
*********************************************************************************************************************/
bool HAL_Touch_GetIICBusState( void )
{
    bool ret = DRV_GT316L_GetIICBusState();
	return ret;
}

/*********************************************************************************************************************
* Function Name :  HAL_Touch_GetKeyValue()
* Description   :  获取按键值
* Para          :  none
* Return        :  键值
*********************************************************************************************************************/
uint8_t HAL_Touch_GetKeyValue( void )
{
	uint8_t keyNo;
	
	KEY_VALUE_E ret = DRV_GT316L_GetKeyValue();
	if( ret != NONE_KEY )
	{
//		my_printf( "Touch key channel = %d\n", ret+1 ); 
	}
    switch( ret )
	{
		case EM_KEY_00:  keyNo = EM_PIN_TO_KEY_01;     break;
		case EM_KEY_01:  keyNo = EM_PIN_TO_KEY_02;     break;
		case EM_KEY_02:  keyNo = EM_PIN_TO_KEY_03;     break;
		case EM_KEY_03:  keyNo = EM_PIN_TO_KEY_04;     break;
		case EM_KEY_04:  keyNo = EM_PIN_TO_KEY_05;     break;
		case EM_KEY_05:  keyNo = EM_PIN_TO_KEY_06;     break;
		case EM_KEY_06:  keyNo = EM_PIN_TO_KEY_07;     break;
		case EM_KEY_07:  keyNo = EM_PIN_TO_KEY_08;     break;
		case EM_KEY_08:  keyNo = EM_PIN_TO_KEY_09;     break;
		case EM_KEY_09:  keyNo = EM_PIN_TO_KEY_10;     break;
		case EM_KEY_10:  keyNo = EM_PIN_TO_KEY_11;     break;
		case EM_KEY_11:  keyNo = EM_PIN_TO_KEY_12;     break;
		case EM_KEY_12:  keyNo = EM_PIN_TO_KEY_13;     break;
		case EM_KEY_13:  keyNo = EM_PIN_TO_KEY_14;     break;
		case EM_KEY_14:  keyNo = EM_PIN_TO_KEY_15;     break;
		case EM_KEY_15:  keyNo = EM_PIN_TO_KEY_16;     break;
		case NONE_KEY:   keyNo = 0xff;                 break;
		
		default:         keyNo = 0xff;                 break;
	}
	
	return keyNo;
	
}
 

/*-------------------------------------------------THE FILE END-----------------------------------------------------*/



